{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31mThe `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2023-06-09 18:31:34"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31mThe `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2023-06-09 18:31:55"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31mThe `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2023-06-09 18:32:01"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31mThe `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2023-06-09 18:32:09"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31mThe `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2023-06-09 18:32:49"}
{"_message":"User validation failed","errors":{"email":{"kind":"required","message":"Path `email` is required.","name":"ValidatorError","path":"email","properties":{"message":"Path `email` is required.","path":"email","type":"required"}},"firstName":{"kind":"required","message":"Path `firstName` is required.","name":"ValidatorError","path":"firstName","properties":{"message":"Path `firstName` is required.","path":"firstName","type":"required"}},"lastName":{"kind":"required","message":"Path `lastName` is required.","name":"ValidatorError","path":"lastName","properties":{"message":"Path `lastName` is required.","path":"lastName","type":"required"}},"password":{"kind":"string","message":"Cast to string failed for value \"Promise { <pending> }\" (type Promise) at path \"password\"","name":"CastError","path":"password","reason":null,"stringValue":"\"Promise { <pending> }\"","value":{},"valueType":"Promise"}},"level":"\u001b[31merror\u001b[39m","timestamp":"2023-06-09 19:14:31"}
{"_message":"User validation failed","errors":{"email":{"kind":"required","message":"Path `email` is required.","name":"ValidatorError","path":"email","properties":{"message":"Path `email` is required.","path":"email","type":"required"}},"firstName":{"kind":"required","message":"Path `firstName` is required.","name":"ValidatorError","path":"firstName","properties":{"message":"Path `firstName` is required.","path":"firstName","type":"required"}},"lastName":{"kind":"required","message":"Path `lastName` is required.","name":"ValidatorError","path":"lastName","properties":{"message":"Path `lastName` is required.","path":"lastName","type":"required"}},"password":{"kind":"string","message":"Cast to string failed for value \"Promise { <pending> }\" (type Promise) at path \"password\"","name":"CastError","path":"password","reason":null,"stringValue":"\"Promise { <pending> }\"","value":{},"valueType":"Promise"}},"level":"\u001b[31merror\u001b[39m","timestamp":"2023-06-09 19:14:56"}
{"_message":"User validation failed","errors":{"email":{"kind":"required","message":"Path `email` is required.","name":"ValidatorError","path":"email","properties":{"message":"Path `email` is required.","path":"email","type":"required"}},"password":{"kind":"string","message":"Cast to string failed for value \"Promise { <pending> }\" (type Promise) at path \"password\"","name":"CastError","path":"password","reason":null,"stringValue":"\"Promise { <pending> }\"","value":{},"valueType":"Promise"}},"level":"\u001b[31merror\u001b[39m","timestamp":"2023-06-09 19:15:37"}
{"level":"\u001b[31merror\u001b[39m","timestamp":"2023-06-09 19:15:59"}
{"code":11000,"index":0,"keyPattern":{"email":1},"keyValue":{"email":"test@mail.com"},"level":"\u001b[31merror\u001b[39m","timestamp":"2023-06-09 19:17:48"}
